{"version":3,"sources":["store/actions/checkIn.js","store/actions/actionTypes.js","containers/CheckIn/CheckIn.js","containers/ResetForm/ResetForm.js","containers/GoogleAuth/GoogleAuth.js","store/actions/auth.js","hoc/Layout/Layout.js","App.js","store/reducers/checkIn.js","store/reducers/auth.js","index.js"],"names":["fetchRecentPfdReset","id","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","get","concat","sent","type","payload","data","stop","_x","apply","this","arguments","connect","state","recentPfdReset","Date","checkIn","pfdResetDate","userId","auth","onFetchRecentPfdReset","props","useEffect","d","react_default","createElement","isNaN","toLocaleDateString","toFixed","reduxForm","form","onSubmit","handleSubmit","htmlFor","Field","name","component","react_datepicker_min_default","selected","input","value","onChange","GoogleAuth","onAuthChange","isSignedIn","_this","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","_this2","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","className","console","log","renderAuthButton","React","Component","isAuthenticated","addPfdReset","checkInData","_ref2","_callee2","_context2","post","_x2","moreFeatures","Fragment","containers_CheckIn_CheckIn","containers_ResetForm_ResetForm","formValues","containers_GoogleAuth_GoogleAuth","App","hoc_Layout_Layout","initialState","checkInReducer","length","undefined","action","newDate","date","prevDate","objectSpread","resetDate","INITIAL_STATE","inSignedIn","rootReducer","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.11371913.chunk.js","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const fetchRecentPfdReset = (id) => async (dispatch) => {\n  const response = await axios.get(`/checkIns/${id}`);\n\n  dispatch({\n    type: actionTypes.FETCH_RECENT_PFD_RESET,\n    payload: response.data,\n  });\n};\n\nexport const addPfdReset = (checkInData) => async (dispatch) => {\n  console.log(\"DATA: \", checkInData);\n  const response = await axios.post(`/checkIns`, checkInData);\n\n  dispatch({\n    type: actionTypes.ADD_PFD_RESET,\n    payload: response.data,\n  });\n};\n","export const FETCH_RECENT_PFD_RESET = \"FETCH_RECENT_PFD_RESET\";\nexport const ADD_PFD_RESET = \"ADD_PFD_RESET\";\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchRecentPfdReset } from \"../../store/actions\";\n\nconst CheckIn = (props) => {\n\n  const { onFetchRecentPfdReset, recentPfdReset } = props;\n\n  useEffect(() => {\n    onFetchRecentPfdReset(props.userId);\n  }, [onFetchRecentPfdReset]);\n\n  let checkIn = <p>Loading...</p>;\n\n  \n  const isValidDate = (d) => d instanceof Date && !isNaN(d)\n\n  if (recentPfdReset) {\n    checkIn = (\n      <p>No reset date recorded.  Enter one below: </p>\n    )\n  }\n  \n  if (recentPfdReset && isValidDate(recentPfdReset)) {\n    checkIn = (\n      <p>\n        You last reset on: {recentPfdReset.toLocaleDateString(\"en-US\")}.\n        <br />\n        That's{\" \"}\n        {((new Date() - recentPfdReset) / (1000 * 60 * 60 * 24)).toFixed(\n          2\n        )}{\" \"}\n        days ago.\n      </p>\n    );\n  }\n\n  return <div>{checkIn}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    recentPfdReset: new Date(state.checkIn.pfdResetDate),\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchRecentPfdReset: (id) => dispatch(fetchRecentPfdReset(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckIn);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\n\nconst ResetForm = (props) => {\n\n  const ReduxFormDate = (props) => (\n    <DatePicker\n      selected={props.input.value || null}\n      onChange={props.input.onChange}\n    />\n  );\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <label htmlFor=\"enteredLastResetDate\">Enter reset date:</label>\n        <Field name=\"resetDate\" component={ReduxFormDate} />\n      </div>\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({ form: \"reset\" })(ResetForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../store/actions/auth\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"271794219948-7bc8n311cdthkduegssgstn3dfg5rr08.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          \n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    console.log(\"AUTH: \", this.auth)\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import * as actionTypes from \"./actionTypes\"\n\nexport const signIn = (userId) => {\n    return {\n      type: actionTypes.SIGN_IN,\n      payload: userId,\n    };\n  };\n  \n  export const signOut = () => {\n    return {\n      type: actionTypes.SIGN_OUT,\n    };\n  };","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPfdReset, fetchRecentPfdReset } from \"../../store/actions\";\nimport CheckIn from \"../../containers/CheckIn/CheckIn\";\nimport ResetForm from \"../../containers/ResetForm/ResetForm\";\nimport GoogleAuth from \"../../containers/GoogleAuth/GoogleAuth\";\n\nconst Layout = (props) => {\n  const onSubmit = (formValues) => {\n    formValues.userId = props.userId;\n    props.addPfdReset(formValues);\n  };\n\n  let moreFeatures = null;\n\n  if (props.isAuthenticated) {\n    moreFeatures = (\n      <React.Fragment>\n        <CheckIn />\n        <ResetForm onSubmit={onSubmit} />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <GoogleAuth />\n      {moreFeatures}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.userId !== null,\n    userId: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps, { addPfdReset, fetchRecentPfdReset })(\n  Layout\n);\n","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\"\n\nconst App = (props) => {\n\n  return (\n    <div>\n      <Layout />\n    </div>\n  );\n};\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  pfdResetDate: \"\",\n};\n\nconst checkInReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PFD_RESET:\n      // console.log(`LOOK HERE: ${state.pfdResetDate}`);\n      const newDate = new Date(action.payload.date);\n      const prevDate = new Date(state.pfdResetDate);\n      console.log(\"LOOK HERE: \", prevDate === \"\");\n      if (newDate > prevDate || prevDate !== \"\") {\n        return {\n          ...state,\n          pfdResetDate: newDate,\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case actionTypes.FETCH_RECENT_PFD_RESET:\n      // console.log(\"LOOK HERE: \", action.payload[0].resetDate)\n      if (action.payload[0]) {\n        return {\n          ...state,\n          pfdResetDate: action.payload[0].resetDate,\n        };\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default checkInReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  inSignedIn: null,\n  userId: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case actionTypes.SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\n\nimport App from \"./App\";\nimport checkInReducer from \"./store/reducers/checkIn\";\nimport authReducer from \"./store/reducers/auth\"\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  checkIn: checkInReducer,\n  form: formReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}